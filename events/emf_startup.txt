# -*- ck2.events -*-

namespace = emf_startup

# emf_startup.0
#
# Main EMF campaign initialization event, fired from on_startup [Isis]
character_event = {
	id = emf_startup.0
	hide_window = yes
	is_triggered_only = yes

	religion = hip_religion

	trigger = {
		has_landed_title = e_hip
		is_save_game = no
	}

	immediate = {
		# The EMF flag should not be set until this event is done.
		# The EMF_prestartup flag is set via title history if the HIP installer was used to compile EMF, however.
		if = {
			limit = { has_global_flag = EMF }
			log = "CRITICAL ERROR: emf_startup.0: global flag EMF was already set before startup event; aborting game after error event!"
			any_player = { narrative_event = { id = emf_startup.2 } }
			break = yes
		}

		set_global_flag = emf_game_start_v11_1_BETA # SAVE-COMPAT / FIXME / TODO: CHANGE UPON RELEASE

		# Global EMF config pre-startup settings (great for easy tweaking of EMF behavior in your submod):
		character_event = { id = emf_config.0 }
		
		# History's Forgotten Wives (generated before genetics are processed so that genetic inheritance can properly happen to children)
		if = {
			limit = { NOT = { has_game_rule = { name = generate_forgotten_women value = off } } }
			random_character = {
				limit = { emf_startup_character_needs_wife = yes }
				character_event = { id = emf_startup.24 }
			}
		}

		# Initialize genetics on randomly-generated rulers:
		character_event = { id = emf_dna.0 }
		
		# Initialize dummy religion characters
		character_event = { id = emf_religion_codegen.0 }
		
		# Initialize flags and variables saved to religion scopes that are meant to allow checking religion-based settings that have no conditions
		character_event = { id = emf_religion_codegen.2 }

		# Map-specific changes (see emf_startup_map.txt)
		character_event = { id = emf_startup.30 }
		
		# Distribute grazing land quality modifiers across the map (i.e. Nomad population contribution multipliers on provinces based on how appropriate their terrain is to Turkic Nomadic lifestyle)
		character_event = { id = emf_nomad.200 }

		# Absorb the Patrimonium Sancti Petri into Lombardia, sans Latium.
		k_italy = {
			k_papacy = {
				any_direct_de_jure_vassal_title = {
					set_flag = emf_exarchate_of_ravenna
					de_jure_liege = PREVPREV
				}
				d_latium = { de_jure_liege = PREV }
			}
		}

		# Ensure the Persian Emperor doesn't hold the kingdom title too
		if = {
			limit = { e_persia = { owner = { has_landed_title = k_persia } } }
			k_persia = { emf_destroy_title = yes }
		}

		# Add Court Anarchy trait during Anarchy at Samarra
		if = {
			limit = {
				year >= 862
				year < 870
				is_alternate_start = no
			}
			d_sunni = {
				owner = {
					add_trait = court_anarchy
					c_163025 = {
						reverse_remove_opinion = { who = PREV modifier = opinion_charge_heresiarch }
						reverse_opinion = { who = PREV modifier = mad_heretic }
					}
					c_163026 = {
						reverse_remove_opinion = { who = PREV modifier = opinion_charge_heresiarch }
						reverse_opinion = { who = PREV modifier = mad_heretic }
					}
				}
			}
		}

		# Mark [some of] the sons of Ragnar as never being willing to "bend the knee"
		# via EMF's generalized Rollo mechanic. It's quite sad when the Great Heathen Army just all decides, "Fuck it,
		# Odin never did anything for me anyway."
		if = {
			limit = { start_date == 867.1.1 }
			c_163110 = { set_flag = emf_will_never_bend_the_knee } # Sigurdr
			c_163111 = { set_flag = emf_will_never_bend_the_knee } # Ivar
			c_163112 = { set_flag = emf_will_never_bend_the_knee } # Halfdan
			c_163119 = { set_flag = emf_will_never_bend_the_knee } # Ubbe
		}

		if = {
			limit = { is_alternate_start = no }
			k_magyar = { set_flag = emf_autodestroy_exemption }
		}

		# Run the [unnecessary] titular title autodestruction code upon every playable ruler now
		any_playable_ruler = {
			limit = {
				ai = yes
				war = no
			}
			character_event = { id = emf_core.100 }
		}

		# Ensure Varangian Guard is active and vassal to the ERE after 988
		character_event = { id = emf_startup.50 }

		# Rum's existence always consumes k_anatolia's de jure territory
		if = {
			limit = { k_rum = { has_holder = yes } }
			k_anatolia = {
				any_direct_de_jure_vassal_title = { de_jure_liege = k_rum }
				set_flag = emf_defunct
			}
		}

		# Prevent early mending of the Catholic Schism
		if = {
			limit = {
				b_hagiasophia = { owner = { religion = catholic } }
				is_alternate_start = no
			}
			k_orthodox = {
				owner = {
					b_hagiasophia = {
						grant_title_no_opinion = PREV
					}
				}
			}
		}

		# Remove ahistorical de jure empires
		character_event = { id = emf_empires.20 }

		# Setup flags and global event targets for the HRE & ERE
		emf_startup_init_hre = yes
		emf_startup_init_byz = yes

		if = { # Paradox title/char history flag-setting timestamp bug workaround
			limit = { e_mongol_empire = { has_holder = yes } }
			set_global_flag = mongol_empire_arrival
		}

		# Initialize capital-connected territory tracking (note that this is also done on_startup as its own
		# on_action, so I'm commenting-out this invocation until/if some code in campaign setup needs to have that
		# data guaranteed in order to do something with it).

		# Initialize laws
		character_event = { id = emf_laws.0 }

		# Cleanup baron-tier border gore
		any_independent_ruler = {
			any_realm_lord = {
				character_event = { id = emf_borders.0 }
				character_event = { id = emf_borders.1 }
			}
		}

		# Initialize playable ruler demesne (limit random vassal barons)
		any_playable_ruler = {
			character_event = { id = emf_startup.15 }
		}
		
		# Give out caste traits for anyone missing them who should have them
		character_event = { id = emf_religion.18 }

		# Track historical dynasties already in the game at start
		# COMMENTED-OUT: the `has_flag = emf_maybe_historical` trigger no longer appears to be working correctly
		#any_character = {
		#	limit = {
		#		is_lowborn = no
		#		has_flag = emf_maybe_historical
		#	}
		#	set_dynasty_flag = emf_is_historical
		#}

		# Mark players that start with the celibate trait for the decision emf_renounce_startup_celibacy
		any_player = {
			limit = { trait = celibate }
			set_flag = emf_started_celibate
		}

		if = {
			limit = {
				NOT = { has_global_flag = emf_config_antinomad_disabled }
				has_random_religions_or_cultures = no
				has_random_religion_or_culture_names = no
			}
			# Antinomad setup (preserve province history culture & religion)
			character_event = { id = emf_nomad.1000 }
		}

		event_target:emf_global_hre = {
			owner = {
				# Destroy any HRE forbidden title(s) held by the Emperor
				character_event = { id = emf_hre.72 }
				# Adjust the HRE title's preferred capital based upon owner demesne
				character_event = { id = emf_empires.71 }
			}
		}

		# Combat & diplo trait distribution
		any_character = {
			character_event = { id = emf_startup.10 }
			character_event = { id = emf_startup.11 }
		}

		# Apply Islamic handicap to religious authority
		character_event = { id = emf_startup.41 }

		# Set historical Focus laws for Taifas
		character_event = { id = emf_startup.9 }

		# Add Crowned traits [native coronation]
		character_event = { id = emf_coronation.1100 }

		# Byzantine setup events
		e_byzantium = { owner = { character_event = { id = emf_imperial.1875 days = 1 } } }

		# History's Forgotten Daughters
		if = {
			limit = { NOT = { has_game_rule = { name = generate_forgotten_women value = off } } }
			random_playable_ruler = {
				limit = { emf_startup_ruler_needs_extra_daughter = yes }
				character_event = { id = emf_startup.25 }
			}
		}

		# Mongol startup event
		character_event = { id = emf_mongol.100 }

		# Norman startup event
		character_event = { id = emf_adventurer.2749 }

		# Seljuk startup event
		character_event = { id = emf_seljuk.3 }

		# Magyar startup event
		k_hungary = { owner = { character_event = { id = emf_magyar.3025 } } }

		# Marriage flags & deal with random sterility traits
		emf_startup_init_marriage = yes

		# Remove extranneous claims from all characters (unheld or held by the character)
		character_event = { id = emf_claims.15 }

		# Retroactively invoke weak, unpressed claim inheritance upon adulthood from mother's / father's strong
		# claims for titles under male / female preference succession, respectively
		any_character = {
			limit = {
				is_adult = yes
				is_female = no
			}
			character_event = { id = emf_claims.10 }
		}
		any_character = {
			limit = {
				is_adult = yes
				is_female = yes
			}
			character_event = { id = emf_claims.11 }
		}

		# Perform dynamic assignment of HRE elector titles.
		event_target:emf_global_hre = { owner = { character_event = { id = emf_hre.60 } } }

		# Initialize dynlevy
		character_event = { id = emf_dynlevy.0 }
		
		# Legacy sweep for MRs without Law Voting Power. TODO: Remove this after next save-incompatible version
		any_landed_title = {
			limit = {
				holder_scope = { is_merchant_republic = yes } # For some reason, an is_merchant_republic = yes check doesn't work directly on the title here
				is_merchant_republic = yes
				is_law_potential = law_voting_power_1
				NOT = { has_law = law_voting_power_1 }
			}
			add_law = law_voting_power_1
		}

		# Primary startup is done, so we raise the EMF flag.
		set_global_flag = EMF

		# Global EMF config post-startup settings (great for easy tweaking of EMF behavior in your submod when the
		# configuration options depend upon the fairly large changes to game state made by the startup code which has
		# just finished).
		character_event = { id = emf_config.1 }

		# Welcome event
		any_player = {
			narrative_event = { id = emf_startup.1 }
		}
	}
}

# emf_startup.10 [Any Character]
#
# Combat trait distribution
character_event = {
	id = emf_startup.10

	hide_window = yes
	is_triggered_only = yes

	min_age = 16

	trigger = {
		has_warrior_skill_trigger = no
		OR = {
			is_playable = yes
			can_be_marshal_trigger = yes
		}
		OR = {
			has_education_martial_trigger = yes
			has_lifestyle_martial_trigger = yes
			has_job_title = job_marshal
			has_minor_title = title_commander
		}
	}

	immediate = {
		if = {
			limit = { trait = misguided_warrior }
			isis = { change_variable = { which = combat_skill value = 2 } }
		}
		if = {
			limit = { trait = tough_soldier }
			isis = { change_variable = { which = combat_skill value = 4 } }
		}
		if = {
			limit = { trait = skilled_tactician }
			isis = { change_variable = { which = combat_skill value = 6 } }
		}
		if = {
			limit = { trait = brilliant_strategist }
			isis = { change_variable = { which = combat_skill value = 8 } }
		}
		if = {
			limit = { trait = diligent }
			isis = { change_variable = { which = combat_skill value = 1 } }
		}
		if = {
			limit = { trait = brave }
			isis = { change_variable = { which = combat_skill value = 2 } }
		}
		if = {
			limit = { is_smart_trigger = yes }
			isis = { change_variable = { which = combat_skill value = 1 } }
		}
		if = {
			limit = { trait = genius }
			isis = { change_variable = { which = combat_skill value = 2 } }
		}
		if = {
			limit = { trait = strong }
			isis = { change_variable = { which = combat_skill value = 2 } }
		}
		if = {
			limit = { trait = robust }
			isis = { change_variable = { which = combat_skill value = 2 } }
		}
		if = {
			limit = { trait = agile }
			isis = { change_variable = { which = combat_skill value = 1 } }
		}
		if = {
			limit = { is_weak_trigger = yes }
			isis = { change_variable = { which = combat_skill value = -2 } }
		}
		if = {
			limit = { trait = slow }
			isis = { change_variable = { which = combat_skill value = -1 } }
		}
		if = {
			limit = { trait = dull }
			isis = { change_variable = { which = combat_skill value = -1 } }
		}
		if = {
			limit = { trait = imbecile }
			isis = { change_variable = { which = combat_skill value = -3 } }
		}
		if = {
			limit = { trait = inbred }
			isis = { change_variable = { which = combat_skill value = -2 } }
		}
		if = {
			limit = { trait = clubfooted }
			isis = { change_variable = { which = combat_skill value = -1 } }
		}
		if = {
			limit = { trait = slothful }
			isis = { change_variable = { which = combat_skill value = -1 } }
		}
		if = {
			limit = { trait = craven }
			isis = { change_variable = { which = combat_skill value = -2 } }
		}
		if = {
			limit = { trait = impaler }
			isis = { change_variable = { which = combat_skill value = 1 } }
		}
		if = {
			limit = { trait = duelist }
			isis = { change_variable = { which = combat_skill value = 3 } }
		}
		if = {
			limit = {
				isis = { check_variable = { which = combat_skill value = 8 } }
			}
			add_trait = master_warrior
			break = yes
		}
		if = {
			limit = {
				isis = { check_variable = { which = combat_skill value = 6 } }
			}
			add_trait = skilled_warrior
			break = yes
		}
		if = {
			limit = {
				isis = { check_variable = { which = combat_skill value = 4 } }
			}
			add_trait = trained_warrior
			break = yes
		}
		if = {
			limit = {
				isis = { check_variable = { which = combat_skill value = 1 } }
			}
			add_trait = poor_warrior
		}
	}

	option = {
		name = OK
		isis = { set_variable = { which = combat_skill value = 0 } }
	}
}

# emf_startup.11 [Any Character]
# Diplomat trait distribution
character_event = {
	id = emf_startup.11

	hide_window = yes
	is_triggered_only = yes

	min_age = 16

	trigger = {
		has_diplomat_skill_trigger = no
		OR = {
			is_playable = yes
			can_be_chancellor_trigger = yes
		}
		OR = {
			has_education_diplomacy_trigger = yes
			has_lifestyle_diplomacy_trigger = yes
			has_job_title = job_chancellor
		}
	}

	immediate = {
		if = {
			limit = { trait = naive_appeaser }
			isis = { change_variable = { which = diplomat_skill value = 2 } }
		}
		if = {
			limit = { trait = underhanded_rogue }
			isis = { change_variable = { which = diplomat_skill value = 4 } }
		}
		if = {
			limit = { trait = charismatic_negotiator }
			isis = { change_variable = { which = diplomat_skill value = 6 } }
		}
		if = {
			limit = { trait = grey_eminence }
			isis = { change_variable = { which = diplomat_skill value = 8 } }
		}
		if = {
			limit = { trait = gregarious }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = charitable }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { is_smart_trigger = yes }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = genius }
			isis = { change_variable = { which = diplomat_skill value = 2 } }
		}
		if = {
			limit = { trait = diligent }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = patient }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = deceitful }
			isis = { change_variable = { which = diplomat_skill value = -2 } }
		}
		if = {
			limit = { trait = honest }
			isis = { change_variable = { which = diplomat_skill value = 2 } }
		}
		if = {
			limit = { trait = slow }
			isis = { change_variable = { which = diplomat_skill value = -1 } }
		}
		if = {
			limit = { trait = dull }
			isis = { change_variable = { which = diplomat_skill value = -1 } }
		}
		if = {
			limit = { trait = imbecile }
			isis = { change_variable = { which = diplomat_skill value = -3 } }
		}
		if = {
			limit = { trait = shy }
			isis = { change_variable = { which = diplomat_skill value = -2 } }
		}
		if = {
			limit = { trait = trusting }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = tall }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = melodious_voice }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = powerful_voice }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = calm_voice }
			isis = { change_variable = { which = diplomat_skill value = 1 } }
		}
		if = {
			limit = { trait = paranoid }
			isis = { change_variable = { which = diplomat_skill value = -1 } }
		}
		if = {
			limit = { trait = cruel }
			isis = { change_variable = { which = diplomat_skill value = -1 } }
		}
		if = {
			limit = { trait = deaf }
			isis = { change_variable = { which = diplomat_skill value = -2 } }
		}
		if = {
			limit = {
				isis = { check_variable = { which = diplomat_skill value = 8 } }
			}
			add_trait = master_diplomat
			break = yes
		}
		if = {
			limit = {
				isis = { check_variable = { which = diplomat_skill value = 6 } }
			}
			add_trait = skilled_diplomat
			break = yes
		}
		if = {
			limit = {
				isis = { check_variable = { which = diplomat_skill value = 4 } }
			}
			add_trait = trained_diplomat
			break = yes
		}
		if = {
			limit = {
				isis = { check_variable = { which = diplomat_skill value = 1 } }
			}
			add_trait = novice_diplomat
		}
	}

	option = {
		name = OK
		isis = { set_variable = { which = diplomat_skill value = 0 } }
	}
}
